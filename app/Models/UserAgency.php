<?php

namespace App\Models;

use App\Enums\ProductSessionType;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\DB;

class UserAgency extends Model
{
    protected $guarded = ['id'];

    protected $table = 'user_agencys';

    public function sessions(){
        return $this->hasMany(ProductSession::class);
    }

    public function order_imports(){
        return $this->hasMany(Import::class,'agency_id');
    }

    public function imports(){
        return $this->hasMany(ProductSession::class,'agency_id')->whereType(ProductSessionType::getKey(ProductSessionType::import));
    }

    public function exports(){
        return $this->hasMany(ProductSession::class,'user_id')->whereType(ProductSessionType::getKey(ProductSessionType::export));
    }
    public function transactions(){
        return $this->hasMany(Transaction::class,'agency_id');
    }
    public function increaseBalance($amount, $note='', $model = null){
        $transaction = new Transaction();
        $transaction->amount = $amount;
        $transaction->note = $note;
        $transaction->admin_id = Auth::id();
        if ($model instanceof Model){
            $transaction->source()->associate($model);
        }

        $transaction->balance = $this->debt + $amount;

        DB::transaction(function () use ($transaction){
            $this->transactions()->save($transaction);
        });

        return $this;
    }

    public function scopeStatus($q){
        $q->whereStatus(1);
    }

    public static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub
        static::deleting(function($user){
            $user->transactions()->delete();
        });
    }
}
